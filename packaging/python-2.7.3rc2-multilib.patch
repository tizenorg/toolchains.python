Index: configure.in
===================================================================
--- configure.in.orig	2012-03-16 02:26:39.000000000 +0100
+++ configure.in	2012-03-28 20:09:13.000000000 +0200
@@ -630,6 +630,41 @@
     ;;
 esac
 
+AC_SUBST(ARCH)
+AC_MSG_CHECKING(ARCH)
+ARCH=`uname -m`
+case $ARCH in
+i?86) ARCH=i386;;
+esac
+AC_MSG_RESULT($ARCH)
+
+AC_SUBST(LIB)
+AC_MSG_CHECKING(LIB)
+case $ac_sys_system in
+Linux*)
+  # Test if the compiler is 64bit
+  echo 'int i;' > conftest.$ac_ext
+  python_cv_cc_64bit_output=no
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.$ac_objext` in
+    *"ELF 64"*)
+      python_cv_cc_64bit_output=yes
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+case $ARCH:$python_cv_cc_64bit_output in
+ppc64:yes | powerpc64:yes | s390x:yes | sparc64:yes | x86_64:yes)
+  LIB="lib64"
+  ;;
+*:*)
+  LIB="lib"
+  ;;
+esac
+AC_MSG_RESULT($LIB)
 
 AC_SUBST(LIBRARY)
 AC_MSG_CHECKING(LIBRARY)
Index: Include/pythonrun.h
===================================================================
--- Include/pythonrun.h.orig	2012-03-16 02:26:31.000000000 +0100
+++ Include/pythonrun.h	2012-03-28 20:09:13.000000000 +0200
@@ -108,6 +108,8 @@
 /* In their own files */
 PyAPI_FUNC(const char *) Py_GetVersion(void);
 PyAPI_FUNC(const char *) Py_GetPlatform(void);
+PyAPI_FUNC(const char *) Py_GetArch(void);
+PyAPI_FUNC(const char *) Py_GetLib(void);
 PyAPI_FUNC(const char *) Py_GetCopyright(void);
 PyAPI_FUNC(const char *) Py_GetCompiler(void);
 PyAPI_FUNC(const char *) Py_GetBuildInfo(void);
Index: Lib/distutils/command/install.py
===================================================================
--- Lib/distutils/command/install.py.orig	2012-03-28 20:09:11.000000000 +0200
+++ Lib/distutils/command/install.py	2012-03-28 20:09:13.000000000 +0200
@@ -22,6 +22,8 @@
 from site import USER_SITE
 
 
+libname = sys.lib
+
 if sys.version < "2.2":
     WINDOWS_SCHEME = {
         'purelib': '$base',
@@ -42,7 +44,7 @@
 INSTALL_SCHEMES = {
     'unix_prefix': {
         'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'platlib': '$platbase/'+libname+'/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
Index: Lib/distutils/sysconfig.py
===================================================================
--- Lib/distutils/sysconfig.py.orig	2012-03-16 02:26:31.000000000 +0100
+++ Lib/distutils/sysconfig.py	2012-03-28 20:09:13.000000000 +0200
@@ -114,8 +114,11 @@
         prefix = plat_specific and EXEC_PREFIX or PREFIX
 
     if os.name == "posix":
-        libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+        if plat_specific or standard_lib:
+            lib = sys.lib
+        else:
+            lib = "lib"
+        libpython = os.path.join(prefix, lib, "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
Index: Lib/pydoc.py
===================================================================
--- Lib/pydoc.py.orig	2012-03-16 02:26:33.000000000 +0100
+++ Lib/pydoc.py	2012-03-28 20:09:13.000000000 +0200
@@ -352,7 +352,7 @@
 
         docloc = os.environ.get("PYTHONDOCS",
                                 "http://docs.python.org/library")
-        basedir = os.path.join(sys.exec_prefix, "lib",
+        basedir = os.path.join(sys.exec_prefix, sys.lib,
                                "python"+sys.version[0:3])
         if (isinstance(object, type(os)) and
             (object.__name__ in ('errno', 'exceptions', 'gc', 'imp',
Index: Lib/site.py
===================================================================
--- Lib/site.py.orig	2012-03-16 02:26:33.000000000 +0100
+++ Lib/site.py	2012-03-28 20:09:13.000000000 +0200
@@ -300,13 +300,18 @@
         if sys.platform in ('os2emx', 'riscos'):
             sitepackages.append(os.path.join(prefix, "Lib", "site-packages"))
         elif os.sep == '/':
-            sitepackages.append(os.path.join(prefix, "lib",
+            sitepackages.append(os.path.join(prefix, sys.lib,
                                         "python" + sys.version[:3],
                                         "site-packages"))
-            sitepackages.append(os.path.join(prefix, "lib", "site-python"))
+            sitepackages.append(os.path.join(prefix, sys.lib, "site-python"))
+            if sys.lib != "lib":
+                sitepackages.append(os.path.join(prefix, "lib",
+                                            "python" + sys.version[:3],
+                                            "site-packages"))
+                sitepackages.append(os.path.join(prefix, "lib", "site-python"))
         else:
             sitepackages.append(prefix)
-            sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
+            sitepackages.append(os.path.join(prefix, sys.lib, "site-packages"))
         if sys.platform == "darwin":
             # for framework builds *only* we add the standard Apple
             # locations.
Index: Lib/sysconfig.py
===================================================================
--- Lib/sysconfig.py.orig	2012-03-16 02:26:33.000000000 +0100
+++ Lib/sysconfig.py	2012-03-28 20:09:13.000000000 +0200
@@ -7,10 +7,10 @@
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
+        'stdlib': '{base}/'+sys.lib+'/python{py_version_short}',
+        'platstdlib': '{platbase}/'+sys.lib+'/python{py_version_short}',
         'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/'+sys.lib+'/python{py_version_short}/site-packages',
         'include': '{base}/include/python{py_version_short}',
         'platinclude': '{platbase}/include/python{py_version_short}',
         'scripts': '{base}/bin',
@@ -65,10 +65,10 @@
         'data'   : '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
+        'stdlib': '{userbase}/'+sys.lib+'/python{py_version_short}',
+        'platstdlib': '{userbase}/'+sys.lib+'/python{py_version_short}',
         'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/'+sys.lib+'/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data'   : '{userbase}',
Index: Lib/test/test_dl.py
===================================================================
--- Lib/test/test_dl.py.orig	2012-03-16 02:26:34.000000000 +0100
+++ Lib/test/test_dl.py	2012-03-28 20:09:13.000000000 +0200
@@ -5,10 +5,11 @@
 import unittest
 from test.test_support import verbose, import_module
 dl = import_module('dl', deprecated=True)
+import sys
 
 sharedlibs = [
-    ('/usr/lib/libc.so', 'getpid'),
-    ('/lib/libc.so.6', 'getpid'),
+    ('/usr/'+sys.lib+'/libc.so', 'getpid'),
+    ('/'+sys.lib+'/libc.so.6', 'getpid'),
     ('/usr/bin/cygwin1.dll', 'getpid'),
     ('/usr/lib/libc.dylib', 'getpid'),
     ]
Index: Lib/test/test_site.py
===================================================================
--- Lib/test/test_site.py.orig	2012-03-16 02:26:34.000000000 +0100
+++ Lib/test/test_site.py	2012-03-28 20:11:10.000000000 +0200
@@ -241,12 +241,16 @@
             self.assertEqual(dirs[2], wanted)
         elif os.sep == '/':
             # OS X non-framwework builds, Linux, FreeBSD, etc
-            self.assertEqual(len(dirs), 2)
             wanted = os.path.join('xoxo', 'lib', 'python' + sys.version[:3],
                                   'site-packages')
-            self.assertEqual(dirs[0], wanted)
+            self.assertTrue(wanted in dirs)
             wanted = os.path.join('xoxo', 'lib', 'site-python')
-            self.assertEqual(dirs[1], wanted)
+            self.assertTrue(wanted in dirs)
+            wanted = os.path.join('xoxo', sys.lib, 'python' + sys.version[:3],
+                                  'site-packages')
+            self.assertTrue(wanted in dirs)
+            wanted = os.path.join('xoxo', sys.lib, 'site-python')
+            self.assertTrue(wanted in dirs)
         else:
             # other platforms
             self.assertEqual(len(dirs), 2)
Index: Lib/trace.py
===================================================================
--- Lib/trace.py.orig	2012-03-16 02:26:34.000000000 +0100
+++ Lib/trace.py	2012-03-28 20:09:13.000000000 +0200
@@ -754,10 +754,10 @@
                 # should I also call expanduser? (after all, could use $HOME)
 
                 s = s.replace("$prefix",
-                              os.path.join(sys.prefix, "lib",
+                              os.path.join(sys.prefix, sys.lib,
                                            "python" + sys.version[:3]))
                 s = s.replace("$exec_prefix",
-                              os.path.join(sys.exec_prefix, "lib",
+                              os.path.join(sys.exec_prefix, sys.lib,
                                            "python" + sys.version[:3]))
                 s = os.path.normpath(s)
                 ignore_dirs.append(s)
Index: Makefile.pre.in
===================================================================
--- Makefile.pre.in.orig	2012-03-28 20:09:11.000000000 +0200
+++ Makefile.pre.in	2012-03-28 20:09:13.000000000 +0200
@@ -81,6 +81,8 @@
 
 # Machine-dependent subdirectories
 MACHDEP=	@MACHDEP@
+LIB=		@LIB@
+ARCH=		@ARCH@
 
 # Install prefix for architecture-independent files
 prefix=		@prefix@
@@ -533,6 +535,7 @@
 		-DEXEC_PREFIX='"$(exec_prefix)"' \
 		-DVERSION='"$(VERSION)"' \
 		-DVPATH='"$(VPATH)"' \
+		-DARCH='"$(ARCH)"' -DLIB='"$(LIB)"' \
 		-o $@ $(srcdir)/Modules/getpath.c
 
 Modules/python.o: $(srcdir)/Modules/python.c
@@ -567,7 +570,7 @@
 Python/compile.o Python/symtable.o Python/ast.o: $(GRAMMAR_H) $(AST_H)
 
 Python/getplatform.o: $(srcdir)/Python/getplatform.c
-		$(CC) -c $(PY_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -o $@ $(srcdir)/Python/getplatform.c
+		$(CC) -c $(PY_CFLAGS) -DPLATFORM='"$(MACHDEP)"' -DARCH='"$(ARCH)"' -DLIB='"$(LIB)"' -o $@ $(srcdir)/Python/getplatform.c
 
 Python/importdl.o: $(srcdir)/Python/importdl.c
 		$(CC) -c $(PY_CFLAGS) -I$(DLINCLDIR) -o $@ $(srcdir)/Python/importdl.c
Index: Modules/getpath.c
===================================================================
--- Modules/getpath.c.orig	2012-03-16 02:26:37.000000000 +0100
+++ Modules/getpath.c	2012-03-28 20:09:13.000000000 +0200
@@ -116,9 +116,11 @@
 #define EXEC_PREFIX PREFIX
 #endif
 
+#define LIB_PYTHON LIB "/python" VERSION
+
 #ifndef PYTHONPATH
-#define PYTHONPATH PREFIX "/lib/python" VERSION ":" \
-              EXEC_PREFIX "/lib/python" VERSION "/lib-dynload"
+#define PYTHONPATH PREFIX "/" LIB_PYTHON ":" \
+              EXEC_PREFIX "/" LIB_PYTHON "/lib-dynload"
 #endif
 
 #ifndef LANDMARK
@@ -129,7 +131,7 @@
 static char exec_prefix[MAXPATHLEN+1];
 static char progpath[MAXPATHLEN+1];
 static char *module_search_path = NULL;
-static char lib_python[] = "lib/python" VERSION;
+static char lib_python[] = LIB_PYTHON;
 
 static void
 reduce(char *dir)
Index: Python/getplatform.c
===================================================================
--- Python/getplatform.c.orig	2012-03-16 02:26:38.000000000 +0100
+++ Python/getplatform.c	2012-03-28 20:09:13.000000000 +0200
@@ -10,3 +10,23 @@
 {
 	return PLATFORM;
 }
+
+#ifndef ARCH
+#define ARCH "unknown"
+#endif
+
+const char *
+Py_GetArch(void)
+{
+	return ARCH;
+}
+
+#ifndef LIB
+#define LIB "lib"
+#endif
+
+const char *
+Py_GetLib(void)
+{
+	return LIB;
+}
Index: Python/sysmodule.c
===================================================================
--- Python/sysmodule.c.orig	2012-03-16 02:26:39.000000000 +0100
+++ Python/sysmodule.c	2012-03-28 20:09:13.000000000 +0200
@@ -1419,6 +1419,10 @@
                         PyString_FromString(Py_GetCopyright()));
     SET_SYS_FROM_STRING("platform",
                         PyString_FromString(Py_GetPlatform()));
+    SET_SYS_FROM_STRING("arch",
+                        PyString_FromString(Py_GetArch()));
+    SET_SYS_FROM_STRING("lib",
+                        PyString_FromString(Py_GetLib()));
     SET_SYS_FROM_STRING("executable",
                         PyString_FromString(Py_GetProgramFullPath()));
     SET_SYS_FROM_STRING("prefix",
Index: setup.py
===================================================================
--- setup.py.orig	2012-03-16 02:26:39.000000000 +0100
+++ setup.py	2012-03-28 20:09:13.000000000 +0200
@@ -369,7 +369,7 @@
 
     def detect_modules(self):
         # Ensure that /usr/local is always used
-        add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+        add_dir_to_list(self.compiler.library_dirs, '/usr/local/' + sys.lib)
         add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         self.add_multiarch_paths()
 
@@ -427,8 +427,7 @@
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
         lib_dirs = self.compiler.library_dirs + [
-            '/lib64', '/usr/lib64',
-            '/lib', '/usr/lib',
+            '/' + sys.lib, '/usr/' + sys.lib,
             ]
         inc_dirs = self.compiler.include_dirs + ['/usr/include']
         exts = []
@@ -677,11 +676,11 @@
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/'+sys.lib+'/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/'+sys.lib+'/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
@@ -1753,18 +1752,17 @@
         # Check for various platform-specific directories
         if platform == 'sunos5':
             include_dirs.append('/usr/openwin/include')
-            added_lib_dirs.append('/usr/openwin/lib')
+            added_lib_dirs.append('/usr/openwin/' + sys.lib)
         elif os.path.exists('/usr/X11R6/include'):
             include_dirs.append('/usr/X11R6/include')
-            added_lib_dirs.append('/usr/X11R6/lib64')
-            added_lib_dirs.append('/usr/X11R6/lib')
+            added_lib_dirs.append('/usr/X11R6/' + sys.lib)
         elif os.path.exists('/usr/X11R5/include'):
             include_dirs.append('/usr/X11R5/include')
-            added_lib_dirs.append('/usr/X11R5/lib')
+            added_lib_dirs.append('/usr/X11R5/' + sys.lib)
         else:
             # Assume default location for X11
             include_dirs.append('/usr/X11/include')
-            added_lib_dirs.append('/usr/X11/lib')
+            added_lib_dirs.append('/usr/X11/' + sys.lib)
 
         # If Cygwin, then verify that X is installed before proceeding
         if platform == 'cygwin':
